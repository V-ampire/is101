# Generated by Django 3.1.5 on 2021-03-20 14:26

import companies.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('works', 'Работает'), ('archived', 'В архиве')], default='works', max_length=10, verbose_name='Статус')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('city', models.CharField(default='Комсомольск-на-Амуре', max_length=264, verbose_name='Город')),
                ('address', models.CharField(max_length=264, verbose_name='Адрес, без города')),
                ('phone', models.CharField(max_length=32, verbose_name='Номер телефона')),
            ],
            options={
                'verbose_name': 'Филиалы',
                'verbose_name_plural': 'Филиалы',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('works', 'Работает'), ('archived', 'В архиве')], default='works', max_length=10, verbose_name='Статус')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(max_length=264, unique=True, verbose_name='Название должности')),
            ],
            options={
                'verbose_name': 'Должности',
                'verbose_name_plural': 'Должности',
            },
        ),
        migrations.CreateModel(
            name='EmployeeProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('works', 'Работает'), ('archived', 'В архиве')], default='works', max_length=10, verbose_name='Статус')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('fio', models.CharField(max_length=264, verbose_name='ФИО')),
                ('date_of_birth', models.DateField(verbose_name='Дата рождения')),
                ('pasport', models.CharField(max_length=264, unique=True, verbose_name='Паспортные данные')),
                ('pasport_scan', models.FileField(upload_to=companies.models.get_employee_pasport_scan_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'jpg', 'pdf', 'zip'])], verbose_name='Скан паспорта')),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='companies.branch')),
                ('employee_position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='companies.position')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Работники',
                'verbose_name_plural': 'Работники',
                'ordering': ('branch',),
            },
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('works', 'Работает'), ('archived', 'В архиве')], default='works', max_length=10, verbose_name='Статус')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(max_length=128, unique=True, verbose_name='Название компании')),
                ('logo', models.ImageField(upload_to='logo/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'jpg', 'png'])], verbose_name='Логотип компании')),
                ('tagline', models.CharField(max_length=264, verbose_name='Слоган компании')),
                ('inn', models.CharField(max_length=12, unique=True, verbose_name='ИНН')),
                ('ogrn', models.CharField(max_length=15, unique=True, verbose_name='ОГРН\\ОГРНИП')),
                ('city', models.CharField(default='Комсомольск-на-Амуре', max_length=64, verbose_name='Город')),
                ('address', models.CharField(max_length=264, verbose_name='Адрес, без города')),
                ('phone', models.CharField(max_length=32, verbose_name='Номер телефона')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Юридические лица',
                'verbose_name_plural': 'Юридические лица',
                'ordering': ('title', '-created'),
            },
        ),
        migrations.AddField(
            model_name='branch',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='companies.companyprofile'),
        ),
    ]
